name: Datum Service Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  release:
    types: ["published"]

env:
  CONTEXT_DATUM_SERVICE: ./packages/datum-service
  DOCKERFILE_DATUM_SERVICE: ./packages/datum-service/docker/Dockerfile
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
    
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6.7.0
        with:
          context: ${{ env.CONTEXT_DATUM_SERVICE }}
          file: ${{ env.DOCKERFILE_DATUM_SERVICE }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: true

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
  deploy:
    if: github.event_name == 'push' && github.ref_name == 'ci-koyeb-deploy-on-main-merge'
    needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        run: |
          echo "Deploying image ${{ needs.build-and-push-image.outputs.tags }} to production"
