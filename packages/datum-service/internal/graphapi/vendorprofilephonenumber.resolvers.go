package graphapi

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"

	"github.com/99designs/gqlgen/graphql"
	"github.com/datum-cloud/datum-os/internal/ent/generated"
)

// CreateVendorProfilePhoneNumber is the resolver for the createVendorProfilePhoneNumber field.
func (r *mutationResolver) CreateVendorProfilePhoneNumber(ctx context.Context, input generated.CreateVendorProfilePhoneNumberInput) (*VendorProfilePhoneNumberCreatePayload, error) {
	res, err := withTransactionalMutation(ctx).VendorProfilePhoneNumber.Create().SetInput(input).Save(ctx)
	if err != nil {
		return nil, parseRequestError(err, action{action: ActionCreate, object: "vendorprofilephonenumber"}, r.logger)
	}

	return &VendorProfilePhoneNumberCreatePayload{
		VendorProfilePhoneNumber: res,
	}, nil
}

// CreateBulkVendorProfilePhoneNumber is the resolver for the createBulkVendorProfilePhoneNumber field.
func (r *mutationResolver) CreateBulkVendorProfilePhoneNumber(ctx context.Context, input []*generated.CreateVendorProfilePhoneNumberInput) (*VendorProfilePhoneNumberBulkCreatePayload, error) {
	return r.bulkCreateVendorProfilePhoneNumber(ctx, input)
}

// CreateBulkCSVVendorProfilePhoneNumber is the resolver for the createBulkCSVVendorProfilePhoneNumber field.
func (r *mutationResolver) CreateBulkCSVVendorProfilePhoneNumber(ctx context.Context, input graphql.Upload) (*VendorProfilePhoneNumberBulkCreatePayload, error) {
	data, err := unmarshalBulkData[generated.CreateVendorProfilePhoneNumberInput](input)
	if err != nil {
		r.logger.Errorw("failed to unmarshal bulk data", "error", err)

		return nil, err
	}

	return r.bulkCreateVendorProfilePhoneNumber(ctx, data)
}

// UpdateVendorProfilePhoneNumber is the resolver for the updateVendorProfilePhoneNumber field.
func (r *mutationResolver) UpdateVendorProfilePhoneNumber(ctx context.Context, id string, input generated.UpdateVendorProfilePhoneNumberInput) (*VendorProfilePhoneNumberUpdatePayload, error) {
	res, err := withTransactionalMutation(ctx).VendorProfilePhoneNumber.Get(ctx, id)
	if err != nil {
		return nil, parseRequestError(err, action{action: ActionUpdate, object: "vendorprofilephonenumber"}, r.logger)
	}

	// setup update request
	req := res.Update().SetInput(input)

	res, err = req.Save(ctx)
	if err != nil {
		return nil, parseRequestError(err, action{action: ActionUpdate, object: "vendorprofilephonenumber"}, r.logger)
	}

	return &VendorProfilePhoneNumberUpdatePayload{
		VendorProfilePhoneNumber: res,
	}, nil
}

// DeleteVendorProfilePhoneNumber is the resolver for the deleteVendorProfilePhoneNumber field.
func (r *mutationResolver) DeleteVendorProfilePhoneNumber(ctx context.Context, id string) (*VendorProfilePhoneNumberDeletePayload, error) {
	if err := withTransactionalMutation(ctx).VendorProfilePhoneNumber.DeleteOneID(id).Exec(ctx); err != nil {
		return nil, parseRequestError(err, action{action: ActionDelete, object: "vendorprofilephonenumber"}, r.logger)
	}

	if err := generated.VendorProfilePhoneNumberEdgeCleanup(ctx, id); err != nil {
		return nil, newCascadeDeleteError(err)
	}

	return &VendorProfilePhoneNumberDeletePayload{
		DeletedID: id,
	}, nil
}

// VendorProfilePhoneNumber is the resolver for the vendorProfilePhoneNumber field.
func (r *queryResolver) VendorProfilePhoneNumber(ctx context.Context, id string) (*generated.VendorProfilePhoneNumber, error) {
	res, err := withTransactionalMutation(ctx).VendorProfilePhoneNumber.Get(ctx, id)
	if err != nil {
		return nil, parseRequestError(err, action{action: ActionGet, object: "vendorprofilephonenumber"}, r.logger)
	}

	return res, nil
}
