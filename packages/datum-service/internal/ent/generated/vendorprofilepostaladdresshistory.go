// Code generated by ent, DO NOT EDIT.

package generated

import (
	"fmt"
	"strings"
	"time"

	"entgo.io/ent"
	"entgo.io/ent/dialect/sql"
	"github.com/datum-cloud/datum-os/internal/ent/generated/vendorprofilepostaladdresshistory"
	"github.com/datum-cloud/datum-os/pkg/enthistory"
	"github.com/datum-cloud/datum-os/pkg/enums"
)

// VendorProfilePostalAddressHistory is the model entity for the VendorProfilePostalAddressHistory schema.
type VendorProfilePostalAddressHistory struct {
	config `json:"-"`
	// ID of the ent.
	ID string `json:"id,omitempty"`
	// HistoryTime holds the value of the "history_time" field.
	HistoryTime time.Time `json:"history_time,omitempty"`
	// Ref holds the value of the "ref" field.
	Ref string `json:"ref,omitempty"`
	// Operation holds the value of the "operation" field.
	Operation enthistory.OpType `json:"operation,omitempty"`
	// CreatedAt holds the value of the "created_at" field.
	CreatedAt time.Time `json:"created_at,omitempty"`
	// UpdatedAt holds the value of the "updated_at" field.
	UpdatedAt time.Time `json:"updated_at,omitempty"`
	// CreatedBy holds the value of the "created_by" field.
	CreatedBy string `json:"created_by,omitempty"`
	// UpdatedBy holds the value of the "updated_by" field.
	UpdatedBy string `json:"updated_by,omitempty"`
	// MappingID holds the value of the "mapping_id" field.
	MappingID string `json:"mapping_id,omitempty"`
	// DeletedAt holds the value of the "deleted_at" field.
	DeletedAt time.Time `json:"deleted_at,omitempty"`
	// DeletedBy holds the value of the "deleted_by" field.
	DeletedBy string `json:"deleted_by,omitempty"`
	// PostalAddressType holds the value of the "postal_address_type" field.
	PostalAddressType enums.PostalAddressType `json:"postal_address_type,omitempty"`
	// VendorProfileID holds the value of the "vendor_profile_id" field.
	VendorProfileID string `json:"vendor_profile_id,omitempty"`
	// PostalAddressID holds the value of the "postal_address_id" field.
	PostalAddressID string `json:"postal_address_id,omitempty"`
	selectValues    sql.SelectValues
}

// scanValues returns the types for scanning values from sql.Rows.
func (*VendorProfilePostalAddressHistory) scanValues(columns []string) ([]any, error) {
	values := make([]any, len(columns))
	for i := range columns {
		switch columns[i] {
		case vendorprofilepostaladdresshistory.FieldOperation:
			values[i] = new(enthistory.OpType)
		case vendorprofilepostaladdresshistory.FieldID, vendorprofilepostaladdresshistory.FieldRef, vendorprofilepostaladdresshistory.FieldCreatedBy, vendorprofilepostaladdresshistory.FieldUpdatedBy, vendorprofilepostaladdresshistory.FieldMappingID, vendorprofilepostaladdresshistory.FieldDeletedBy, vendorprofilepostaladdresshistory.FieldPostalAddressType, vendorprofilepostaladdresshistory.FieldVendorProfileID, vendorprofilepostaladdresshistory.FieldPostalAddressID:
			values[i] = new(sql.NullString)
		case vendorprofilepostaladdresshistory.FieldHistoryTime, vendorprofilepostaladdresshistory.FieldCreatedAt, vendorprofilepostaladdresshistory.FieldUpdatedAt, vendorprofilepostaladdresshistory.FieldDeletedAt:
			values[i] = new(sql.NullTime)
		default:
			values[i] = new(sql.UnknownType)
		}
	}
	return values, nil
}

// assignValues assigns the values that were returned from sql.Rows (after scanning)
// to the VendorProfilePostalAddressHistory fields.
func (vppah *VendorProfilePostalAddressHistory) assignValues(columns []string, values []any) error {
	if m, n := len(values), len(columns); m < n {
		return fmt.Errorf("mismatch number of scan values: %d != %d", m, n)
	}
	for i := range columns {
		switch columns[i] {
		case vendorprofilepostaladdresshistory.FieldID:
			if value, ok := values[i].(*sql.NullString); !ok {
				return fmt.Errorf("unexpected type %T for field id", values[i])
			} else if value.Valid {
				vppah.ID = value.String
			}
		case vendorprofilepostaladdresshistory.FieldHistoryTime:
			if value, ok := values[i].(*sql.NullTime); !ok {
				return fmt.Errorf("unexpected type %T for field history_time", values[i])
			} else if value.Valid {
				vppah.HistoryTime = value.Time
			}
		case vendorprofilepostaladdresshistory.FieldRef:
			if value, ok := values[i].(*sql.NullString); !ok {
				return fmt.Errorf("unexpected type %T for field ref", values[i])
			} else if value.Valid {
				vppah.Ref = value.String
			}
		case vendorprofilepostaladdresshistory.FieldOperation:
			if value, ok := values[i].(*enthistory.OpType); !ok {
				return fmt.Errorf("unexpected type %T for field operation", values[i])
			} else if value != nil {
				vppah.Operation = *value
			}
		case vendorprofilepostaladdresshistory.FieldCreatedAt:
			if value, ok := values[i].(*sql.NullTime); !ok {
				return fmt.Errorf("unexpected type %T for field created_at", values[i])
			} else if value.Valid {
				vppah.CreatedAt = value.Time
			}
		case vendorprofilepostaladdresshistory.FieldUpdatedAt:
			if value, ok := values[i].(*sql.NullTime); !ok {
				return fmt.Errorf("unexpected type %T for field updated_at", values[i])
			} else if value.Valid {
				vppah.UpdatedAt = value.Time
			}
		case vendorprofilepostaladdresshistory.FieldCreatedBy:
			if value, ok := values[i].(*sql.NullString); !ok {
				return fmt.Errorf("unexpected type %T for field created_by", values[i])
			} else if value.Valid {
				vppah.CreatedBy = value.String
			}
		case vendorprofilepostaladdresshistory.FieldUpdatedBy:
			if value, ok := values[i].(*sql.NullString); !ok {
				return fmt.Errorf("unexpected type %T for field updated_by", values[i])
			} else if value.Valid {
				vppah.UpdatedBy = value.String
			}
		case vendorprofilepostaladdresshistory.FieldMappingID:
			if value, ok := values[i].(*sql.NullString); !ok {
				return fmt.Errorf("unexpected type %T for field mapping_id", values[i])
			} else if value.Valid {
				vppah.MappingID = value.String
			}
		case vendorprofilepostaladdresshistory.FieldDeletedAt:
			if value, ok := values[i].(*sql.NullTime); !ok {
				return fmt.Errorf("unexpected type %T for field deleted_at", values[i])
			} else if value.Valid {
				vppah.DeletedAt = value.Time
			}
		case vendorprofilepostaladdresshistory.FieldDeletedBy:
			if value, ok := values[i].(*sql.NullString); !ok {
				return fmt.Errorf("unexpected type %T for field deleted_by", values[i])
			} else if value.Valid {
				vppah.DeletedBy = value.String
			}
		case vendorprofilepostaladdresshistory.FieldPostalAddressType:
			if value, ok := values[i].(*sql.NullString); !ok {
				return fmt.Errorf("unexpected type %T for field postal_address_type", values[i])
			} else if value.Valid {
				vppah.PostalAddressType = enums.PostalAddressType(value.String)
			}
		case vendorprofilepostaladdresshistory.FieldVendorProfileID:
			if value, ok := values[i].(*sql.NullString); !ok {
				return fmt.Errorf("unexpected type %T for field vendor_profile_id", values[i])
			} else if value.Valid {
				vppah.VendorProfileID = value.String
			}
		case vendorprofilepostaladdresshistory.FieldPostalAddressID:
			if value, ok := values[i].(*sql.NullString); !ok {
				return fmt.Errorf("unexpected type %T for field postal_address_id", values[i])
			} else if value.Valid {
				vppah.PostalAddressID = value.String
			}
		default:
			vppah.selectValues.Set(columns[i], values[i])
		}
	}
	return nil
}

// Value returns the ent.Value that was dynamically selected and assigned to the VendorProfilePostalAddressHistory.
// This includes values selected through modifiers, order, etc.
func (vppah *VendorProfilePostalAddressHistory) Value(name string) (ent.Value, error) {
	return vppah.selectValues.Get(name)
}

// Update returns a builder for updating this VendorProfilePostalAddressHistory.
// Note that you need to call VendorProfilePostalAddressHistory.Unwrap() before calling this method if this VendorProfilePostalAddressHistory
// was returned from a transaction, and the transaction was committed or rolled back.
func (vppah *VendorProfilePostalAddressHistory) Update() *VendorProfilePostalAddressHistoryUpdateOne {
	return NewVendorProfilePostalAddressHistoryClient(vppah.config).UpdateOne(vppah)
}

// Unwrap unwraps the VendorProfilePostalAddressHistory entity that was returned from a transaction after it was closed,
// so that all future queries will be executed through the driver which created the transaction.
func (vppah *VendorProfilePostalAddressHistory) Unwrap() *VendorProfilePostalAddressHistory {
	_tx, ok := vppah.config.driver.(*txDriver)
	if !ok {
		panic("generated: VendorProfilePostalAddressHistory is not a transactional entity")
	}
	vppah.config.driver = _tx.drv
	return vppah
}

// String implements the fmt.Stringer.
func (vppah *VendorProfilePostalAddressHistory) String() string {
	var builder strings.Builder
	builder.WriteString("VendorProfilePostalAddressHistory(")
	builder.WriteString(fmt.Sprintf("id=%v, ", vppah.ID))
	builder.WriteString("history_time=")
	builder.WriteString(vppah.HistoryTime.Format(time.ANSIC))
	builder.WriteString(", ")
	builder.WriteString("ref=")
	builder.WriteString(vppah.Ref)
	builder.WriteString(", ")
	builder.WriteString("operation=")
	builder.WriteString(fmt.Sprintf("%v", vppah.Operation))
	builder.WriteString(", ")
	builder.WriteString("created_at=")
	builder.WriteString(vppah.CreatedAt.Format(time.ANSIC))
	builder.WriteString(", ")
	builder.WriteString("updated_at=")
	builder.WriteString(vppah.UpdatedAt.Format(time.ANSIC))
	builder.WriteString(", ")
	builder.WriteString("created_by=")
	builder.WriteString(vppah.CreatedBy)
	builder.WriteString(", ")
	builder.WriteString("updated_by=")
	builder.WriteString(vppah.UpdatedBy)
	builder.WriteString(", ")
	builder.WriteString("mapping_id=")
	builder.WriteString(vppah.MappingID)
	builder.WriteString(", ")
	builder.WriteString("deleted_at=")
	builder.WriteString(vppah.DeletedAt.Format(time.ANSIC))
	builder.WriteString(", ")
	builder.WriteString("deleted_by=")
	builder.WriteString(vppah.DeletedBy)
	builder.WriteString(", ")
	builder.WriteString("postal_address_type=")
	builder.WriteString(fmt.Sprintf("%v", vppah.PostalAddressType))
	builder.WriteString(", ")
	builder.WriteString("vendor_profile_id=")
	builder.WriteString(vppah.VendorProfileID)
	builder.WriteString(", ")
	builder.WriteString("postal_address_id=")
	builder.WriteString(vppah.PostalAddressID)
	builder.WriteByte(')')
	return builder.String()
}

// VendorProfilePostalAddressHistories is a parsable slice of VendorProfilePostalAddressHistory.
type VendorProfilePostalAddressHistories []*VendorProfilePostalAddressHistory
