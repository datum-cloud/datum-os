// Code generated by ent, DO NOT EDIT.

package generated

import (
	"context"
	"errors"
	"fmt"
	"time"

	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"
	"github.com/datum-cloud/datum-os/internal/ent/generated/vendorprofilepostaladdresshistory"
	"github.com/datum-cloud/datum-os/pkg/enthistory"
	"github.com/datum-cloud/datum-os/pkg/enums"
)

// VendorProfilePostalAddressHistoryCreate is the builder for creating a VendorProfilePostalAddressHistory entity.
type VendorProfilePostalAddressHistoryCreate struct {
	config
	mutation *VendorProfilePostalAddressHistoryMutation
	hooks    []Hook
}

// SetHistoryTime sets the "history_time" field.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetHistoryTime(t time.Time) *VendorProfilePostalAddressHistoryCreate {
	vppahc.mutation.SetHistoryTime(t)
	return vppahc
}

// SetNillableHistoryTime sets the "history_time" field if the given value is not nil.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetNillableHistoryTime(t *time.Time) *VendorProfilePostalAddressHistoryCreate {
	if t != nil {
		vppahc.SetHistoryTime(*t)
	}
	return vppahc
}

// SetRef sets the "ref" field.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetRef(s string) *VendorProfilePostalAddressHistoryCreate {
	vppahc.mutation.SetRef(s)
	return vppahc
}

// SetNillableRef sets the "ref" field if the given value is not nil.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetNillableRef(s *string) *VendorProfilePostalAddressHistoryCreate {
	if s != nil {
		vppahc.SetRef(*s)
	}
	return vppahc
}

// SetOperation sets the "operation" field.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetOperation(et enthistory.OpType) *VendorProfilePostalAddressHistoryCreate {
	vppahc.mutation.SetOperation(et)
	return vppahc
}

// SetCreatedAt sets the "created_at" field.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetCreatedAt(t time.Time) *VendorProfilePostalAddressHistoryCreate {
	vppahc.mutation.SetCreatedAt(t)
	return vppahc
}

// SetNillableCreatedAt sets the "created_at" field if the given value is not nil.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetNillableCreatedAt(t *time.Time) *VendorProfilePostalAddressHistoryCreate {
	if t != nil {
		vppahc.SetCreatedAt(*t)
	}
	return vppahc
}

// SetUpdatedAt sets the "updated_at" field.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetUpdatedAt(t time.Time) *VendorProfilePostalAddressHistoryCreate {
	vppahc.mutation.SetUpdatedAt(t)
	return vppahc
}

// SetNillableUpdatedAt sets the "updated_at" field if the given value is not nil.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetNillableUpdatedAt(t *time.Time) *VendorProfilePostalAddressHistoryCreate {
	if t != nil {
		vppahc.SetUpdatedAt(*t)
	}
	return vppahc
}

// SetCreatedBy sets the "created_by" field.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetCreatedBy(s string) *VendorProfilePostalAddressHistoryCreate {
	vppahc.mutation.SetCreatedBy(s)
	return vppahc
}

// SetNillableCreatedBy sets the "created_by" field if the given value is not nil.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetNillableCreatedBy(s *string) *VendorProfilePostalAddressHistoryCreate {
	if s != nil {
		vppahc.SetCreatedBy(*s)
	}
	return vppahc
}

// SetUpdatedBy sets the "updated_by" field.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetUpdatedBy(s string) *VendorProfilePostalAddressHistoryCreate {
	vppahc.mutation.SetUpdatedBy(s)
	return vppahc
}

// SetNillableUpdatedBy sets the "updated_by" field if the given value is not nil.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetNillableUpdatedBy(s *string) *VendorProfilePostalAddressHistoryCreate {
	if s != nil {
		vppahc.SetUpdatedBy(*s)
	}
	return vppahc
}

// SetMappingID sets the "mapping_id" field.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetMappingID(s string) *VendorProfilePostalAddressHistoryCreate {
	vppahc.mutation.SetMappingID(s)
	return vppahc
}

// SetNillableMappingID sets the "mapping_id" field if the given value is not nil.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetNillableMappingID(s *string) *VendorProfilePostalAddressHistoryCreate {
	if s != nil {
		vppahc.SetMappingID(*s)
	}
	return vppahc
}

// SetDeletedAt sets the "deleted_at" field.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetDeletedAt(t time.Time) *VendorProfilePostalAddressHistoryCreate {
	vppahc.mutation.SetDeletedAt(t)
	return vppahc
}

// SetNillableDeletedAt sets the "deleted_at" field if the given value is not nil.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetNillableDeletedAt(t *time.Time) *VendorProfilePostalAddressHistoryCreate {
	if t != nil {
		vppahc.SetDeletedAt(*t)
	}
	return vppahc
}

// SetDeletedBy sets the "deleted_by" field.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetDeletedBy(s string) *VendorProfilePostalAddressHistoryCreate {
	vppahc.mutation.SetDeletedBy(s)
	return vppahc
}

// SetNillableDeletedBy sets the "deleted_by" field if the given value is not nil.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetNillableDeletedBy(s *string) *VendorProfilePostalAddressHistoryCreate {
	if s != nil {
		vppahc.SetDeletedBy(*s)
	}
	return vppahc
}

// SetPostalAddressType sets the "postal_address_type" field.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetPostalAddressType(eat enums.PostalAddressType) *VendorProfilePostalAddressHistoryCreate {
	vppahc.mutation.SetPostalAddressType(eat)
	return vppahc
}

// SetNillablePostalAddressType sets the "postal_address_type" field if the given value is not nil.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetNillablePostalAddressType(eat *enums.PostalAddressType) *VendorProfilePostalAddressHistoryCreate {
	if eat != nil {
		vppahc.SetPostalAddressType(*eat)
	}
	return vppahc
}

// SetVendorProfileID sets the "vendor_profile_id" field.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetVendorProfileID(s string) *VendorProfilePostalAddressHistoryCreate {
	vppahc.mutation.SetVendorProfileID(s)
	return vppahc
}

// SetPostalAddressID sets the "postal_address_id" field.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetPostalAddressID(s string) *VendorProfilePostalAddressHistoryCreate {
	vppahc.mutation.SetPostalAddressID(s)
	return vppahc
}

// SetID sets the "id" field.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetID(s string) *VendorProfilePostalAddressHistoryCreate {
	vppahc.mutation.SetID(s)
	return vppahc
}

// SetNillableID sets the "id" field if the given value is not nil.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SetNillableID(s *string) *VendorProfilePostalAddressHistoryCreate {
	if s != nil {
		vppahc.SetID(*s)
	}
	return vppahc
}

// Mutation returns the VendorProfilePostalAddressHistoryMutation object of the builder.
func (vppahc *VendorProfilePostalAddressHistoryCreate) Mutation() *VendorProfilePostalAddressHistoryMutation {
	return vppahc.mutation
}

// Save creates the VendorProfilePostalAddressHistory in the database.
func (vppahc *VendorProfilePostalAddressHistoryCreate) Save(ctx context.Context) (*VendorProfilePostalAddressHistory, error) {
	vppahc.defaults()
	return withHooks(ctx, vppahc.sqlSave, vppahc.mutation, vppahc.hooks)
}

// SaveX calls Save and panics if Save returns an error.
func (vppahc *VendorProfilePostalAddressHistoryCreate) SaveX(ctx context.Context) *VendorProfilePostalAddressHistory {
	v, err := vppahc.Save(ctx)
	if err != nil {
		panic(err)
	}
	return v
}

// Exec executes the query.
func (vppahc *VendorProfilePostalAddressHistoryCreate) Exec(ctx context.Context) error {
	_, err := vppahc.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (vppahc *VendorProfilePostalAddressHistoryCreate) ExecX(ctx context.Context) {
	if err := vppahc.Exec(ctx); err != nil {
		panic(err)
	}
}

// defaults sets the default values of the builder before save.
func (vppahc *VendorProfilePostalAddressHistoryCreate) defaults() {
	if _, ok := vppahc.mutation.HistoryTime(); !ok {
		v := vendorprofilepostaladdresshistory.DefaultHistoryTime()
		vppahc.mutation.SetHistoryTime(v)
	}
	if _, ok := vppahc.mutation.CreatedAt(); !ok {
		v := vendorprofilepostaladdresshistory.DefaultCreatedAt()
		vppahc.mutation.SetCreatedAt(v)
	}
	if _, ok := vppahc.mutation.UpdatedAt(); !ok {
		v := vendorprofilepostaladdresshistory.DefaultUpdatedAt()
		vppahc.mutation.SetUpdatedAt(v)
	}
	if _, ok := vppahc.mutation.MappingID(); !ok {
		v := vendorprofilepostaladdresshistory.DefaultMappingID()
		vppahc.mutation.SetMappingID(v)
	}
	if _, ok := vppahc.mutation.PostalAddressType(); !ok {
		v := vendorprofilepostaladdresshistory.DefaultPostalAddressType
		vppahc.mutation.SetPostalAddressType(v)
	}
	if _, ok := vppahc.mutation.ID(); !ok {
		v := vendorprofilepostaladdresshistory.DefaultID()
		vppahc.mutation.SetID(v)
	}
}

// check runs all checks and user-defined validators on the builder.
func (vppahc *VendorProfilePostalAddressHistoryCreate) check() error {
	if _, ok := vppahc.mutation.HistoryTime(); !ok {
		return &ValidationError{Name: "history_time", err: errors.New(`generated: missing required field "VendorProfilePostalAddressHistory.history_time"`)}
	}
	if _, ok := vppahc.mutation.Operation(); !ok {
		return &ValidationError{Name: "operation", err: errors.New(`generated: missing required field "VendorProfilePostalAddressHistory.operation"`)}
	}
	if v, ok := vppahc.mutation.Operation(); ok {
		if err := vendorprofilepostaladdresshistory.OperationValidator(v); err != nil {
			return &ValidationError{Name: "operation", err: fmt.Errorf(`generated: validator failed for field "VendorProfilePostalAddressHistory.operation": %w`, err)}
		}
	}
	if _, ok := vppahc.mutation.MappingID(); !ok {
		return &ValidationError{Name: "mapping_id", err: errors.New(`generated: missing required field "VendorProfilePostalAddressHistory.mapping_id"`)}
	}
	if _, ok := vppahc.mutation.PostalAddressType(); !ok {
		return &ValidationError{Name: "postal_address_type", err: errors.New(`generated: missing required field "VendorProfilePostalAddressHistory.postal_address_type"`)}
	}
	if v, ok := vppahc.mutation.PostalAddressType(); ok {
		if err := vendorprofilepostaladdresshistory.PostalAddressTypeValidator(v); err != nil {
			return &ValidationError{Name: "postal_address_type", err: fmt.Errorf(`generated: validator failed for field "VendorProfilePostalAddressHistory.postal_address_type": %w`, err)}
		}
	}
	if _, ok := vppahc.mutation.VendorProfileID(); !ok {
		return &ValidationError{Name: "vendor_profile_id", err: errors.New(`generated: missing required field "VendorProfilePostalAddressHistory.vendor_profile_id"`)}
	}
	if _, ok := vppahc.mutation.PostalAddressID(); !ok {
		return &ValidationError{Name: "postal_address_id", err: errors.New(`generated: missing required field "VendorProfilePostalAddressHistory.postal_address_id"`)}
	}
	return nil
}

func (vppahc *VendorProfilePostalAddressHistoryCreate) sqlSave(ctx context.Context) (*VendorProfilePostalAddressHistory, error) {
	if err := vppahc.check(); err != nil {
		return nil, err
	}
	_node, _spec := vppahc.createSpec()
	if err := sqlgraph.CreateNode(ctx, vppahc.driver, _spec); err != nil {
		if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return nil, err
	}
	if _spec.ID.Value != nil {
		if id, ok := _spec.ID.Value.(string); ok {
			_node.ID = id
		} else {
			return nil, fmt.Errorf("unexpected VendorProfilePostalAddressHistory.ID type: %T", _spec.ID.Value)
		}
	}
	vppahc.mutation.id = &_node.ID
	vppahc.mutation.done = true
	return _node, nil
}

func (vppahc *VendorProfilePostalAddressHistoryCreate) createSpec() (*VendorProfilePostalAddressHistory, *sqlgraph.CreateSpec) {
	var (
		_node = &VendorProfilePostalAddressHistory{config: vppahc.config}
		_spec = sqlgraph.NewCreateSpec(vendorprofilepostaladdresshistory.Table, sqlgraph.NewFieldSpec(vendorprofilepostaladdresshistory.FieldID, field.TypeString))
	)
	_spec.Schema = vppahc.schemaConfig.VendorProfilePostalAddressHistory
	if id, ok := vppahc.mutation.ID(); ok {
		_node.ID = id
		_spec.ID.Value = id
	}
	if value, ok := vppahc.mutation.HistoryTime(); ok {
		_spec.SetField(vendorprofilepostaladdresshistory.FieldHistoryTime, field.TypeTime, value)
		_node.HistoryTime = value
	}
	if value, ok := vppahc.mutation.Ref(); ok {
		_spec.SetField(vendorprofilepostaladdresshistory.FieldRef, field.TypeString, value)
		_node.Ref = value
	}
	if value, ok := vppahc.mutation.Operation(); ok {
		_spec.SetField(vendorprofilepostaladdresshistory.FieldOperation, field.TypeEnum, value)
		_node.Operation = value
	}
	if value, ok := vppahc.mutation.CreatedAt(); ok {
		_spec.SetField(vendorprofilepostaladdresshistory.FieldCreatedAt, field.TypeTime, value)
		_node.CreatedAt = value
	}
	if value, ok := vppahc.mutation.UpdatedAt(); ok {
		_spec.SetField(vendorprofilepostaladdresshistory.FieldUpdatedAt, field.TypeTime, value)
		_node.UpdatedAt = value
	}
	if value, ok := vppahc.mutation.CreatedBy(); ok {
		_spec.SetField(vendorprofilepostaladdresshistory.FieldCreatedBy, field.TypeString, value)
		_node.CreatedBy = value
	}
	if value, ok := vppahc.mutation.UpdatedBy(); ok {
		_spec.SetField(vendorprofilepostaladdresshistory.FieldUpdatedBy, field.TypeString, value)
		_node.UpdatedBy = value
	}
	if value, ok := vppahc.mutation.MappingID(); ok {
		_spec.SetField(vendorprofilepostaladdresshistory.FieldMappingID, field.TypeString, value)
		_node.MappingID = value
	}
	if value, ok := vppahc.mutation.DeletedAt(); ok {
		_spec.SetField(vendorprofilepostaladdresshistory.FieldDeletedAt, field.TypeTime, value)
		_node.DeletedAt = &value
	}
	if value, ok := vppahc.mutation.DeletedBy(); ok {
		_spec.SetField(vendorprofilepostaladdresshistory.FieldDeletedBy, field.TypeString, value)
		_node.DeletedBy = &value
	}
	if value, ok := vppahc.mutation.PostalAddressType(); ok {
		_spec.SetField(vendorprofilepostaladdresshistory.FieldPostalAddressType, field.TypeEnum, value)
		_node.PostalAddressType = value
	}
	if value, ok := vppahc.mutation.VendorProfileID(); ok {
		_spec.SetField(vendorprofilepostaladdresshistory.FieldVendorProfileID, field.TypeString, value)
		_node.VendorProfileID = value
	}
	if value, ok := vppahc.mutation.PostalAddressID(); ok {
		_spec.SetField(vendorprofilepostaladdresshistory.FieldPostalAddressID, field.TypeString, value)
		_node.PostalAddressID = value
	}
	return _node, _spec
}

// VendorProfilePostalAddressHistoryCreateBulk is the builder for creating many VendorProfilePostalAddressHistory entities in bulk.
type VendorProfilePostalAddressHistoryCreateBulk struct {
	config
	err      error
	builders []*VendorProfilePostalAddressHistoryCreate
}

// Save creates the VendorProfilePostalAddressHistory entities in the database.
func (vppahcb *VendorProfilePostalAddressHistoryCreateBulk) Save(ctx context.Context) ([]*VendorProfilePostalAddressHistory, error) {
	if vppahcb.err != nil {
		return nil, vppahcb.err
	}
	specs := make([]*sqlgraph.CreateSpec, len(vppahcb.builders))
	nodes := make([]*VendorProfilePostalAddressHistory, len(vppahcb.builders))
	mutators := make([]Mutator, len(vppahcb.builders))
	for i := range vppahcb.builders {
		func(i int, root context.Context) {
			builder := vppahcb.builders[i]
			builder.defaults()
			var mut Mutator = MutateFunc(func(ctx context.Context, m Mutation) (Value, error) {
				mutation, ok := m.(*VendorProfilePostalAddressHistoryMutation)
				if !ok {
					return nil, fmt.Errorf("unexpected mutation type %T", m)
				}
				if err := builder.check(); err != nil {
					return nil, err
				}
				builder.mutation = mutation
				var err error
				nodes[i], specs[i] = builder.createSpec()
				if i < len(mutators)-1 {
					_, err = mutators[i+1].Mutate(root, vppahcb.builders[i+1].mutation)
				} else {
					spec := &sqlgraph.BatchCreateSpec{Nodes: specs}
					// Invoke the actual operation on the latest mutation in the chain.
					if err = sqlgraph.BatchCreate(ctx, vppahcb.driver, spec); err != nil {
						if sqlgraph.IsConstraintError(err) {
							err = &ConstraintError{msg: err.Error(), wrap: err}
						}
					}
				}
				if err != nil {
					return nil, err
				}
				mutation.id = &nodes[i].ID
				mutation.done = true
				return nodes[i], nil
			})
			for i := len(builder.hooks) - 1; i >= 0; i-- {
				mut = builder.hooks[i](mut)
			}
			mutators[i] = mut
		}(i, ctx)
	}
	if len(mutators) > 0 {
		if _, err := mutators[0].Mutate(ctx, vppahcb.builders[0].mutation); err != nil {
			return nil, err
		}
	}
	return nodes, nil
}

// SaveX is like Save, but panics if an error occurs.
func (vppahcb *VendorProfilePostalAddressHistoryCreateBulk) SaveX(ctx context.Context) []*VendorProfilePostalAddressHistory {
	v, err := vppahcb.Save(ctx)
	if err != nil {
		panic(err)
	}
	return v
}

// Exec executes the query.
func (vppahcb *VendorProfilePostalAddressHistoryCreateBulk) Exec(ctx context.Context) error {
	_, err := vppahcb.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (vppahcb *VendorProfilePostalAddressHistoryCreateBulk) ExecX(ctx context.Context) {
	if err := vppahcb.Exec(ctx); err != nil {
		panic(err)
	}
}
