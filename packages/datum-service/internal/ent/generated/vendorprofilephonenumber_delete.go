// Code generated by ent, DO NOT EDIT.

package generated

import (
	"context"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"
	"github.com/datum-cloud/datum-os/internal/ent/generated/predicate"

	"github.com/datum-cloud/datum-os/internal/ent/generated/internal"
	"github.com/datum-cloud/datum-os/internal/ent/generated/vendorprofilephonenumber"
)

// VendorProfilePhoneNumberDelete is the builder for deleting a VendorProfilePhoneNumber entity.
type VendorProfilePhoneNumberDelete struct {
	config
	hooks    []Hook
	mutation *VendorProfilePhoneNumberMutation
}

// Where appends a list predicates to the VendorProfilePhoneNumberDelete builder.
func (vppnd *VendorProfilePhoneNumberDelete) Where(ps ...predicate.VendorProfilePhoneNumber) *VendorProfilePhoneNumberDelete {
	vppnd.mutation.Where(ps...)
	return vppnd
}

// Exec executes the deletion query and returns how many vertices were deleted.
func (vppnd *VendorProfilePhoneNumberDelete) Exec(ctx context.Context) (int, error) {
	return withHooks(ctx, vppnd.sqlExec, vppnd.mutation, vppnd.hooks)
}

// ExecX is like Exec, but panics if an error occurs.
func (vppnd *VendorProfilePhoneNumberDelete) ExecX(ctx context.Context) int {
	n, err := vppnd.Exec(ctx)
	if err != nil {
		panic(err)
	}
	return n
}

func (vppnd *VendorProfilePhoneNumberDelete) sqlExec(ctx context.Context) (int, error) {
	_spec := sqlgraph.NewDeleteSpec(vendorprofilephonenumber.Table, sqlgraph.NewFieldSpec(vendorprofilephonenumber.FieldID, field.TypeString))
	_spec.Node.Schema = vppnd.schemaConfig.VendorProfilePhoneNumber
	ctx = internal.NewSchemaConfigContext(ctx, vppnd.schemaConfig)
	if ps := vppnd.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	affected, err := sqlgraph.DeleteNodes(ctx, vppnd.driver, _spec)
	if err != nil && sqlgraph.IsConstraintError(err) {
		err = &ConstraintError{msg: err.Error(), wrap: err}
	}
	vppnd.mutation.done = true
	return affected, err
}

// VendorProfilePhoneNumberDeleteOne is the builder for deleting a single VendorProfilePhoneNumber entity.
type VendorProfilePhoneNumberDeleteOne struct {
	vppnd *VendorProfilePhoneNumberDelete
}

// Where appends a list predicates to the VendorProfilePhoneNumberDelete builder.
func (vppndo *VendorProfilePhoneNumberDeleteOne) Where(ps ...predicate.VendorProfilePhoneNumber) *VendorProfilePhoneNumberDeleteOne {
	vppndo.vppnd.mutation.Where(ps...)
	return vppndo
}

// Exec executes the deletion query.
func (vppndo *VendorProfilePhoneNumberDeleteOne) Exec(ctx context.Context) error {
	n, err := vppndo.vppnd.Exec(ctx)
	switch {
	case err != nil:
		return err
	case n == 0:
		return &NotFoundError{vendorprofilephonenumber.Label}
	default:
		return nil
	}
}

// ExecX is like Exec, but panics if an error occurs.
func (vppndo *VendorProfilePhoneNumberDeleteOne) ExecX(ctx context.Context) {
	if err := vppndo.Exec(ctx); err != nil {
		panic(err)
	}
}
