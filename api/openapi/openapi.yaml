# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Vendors API
    description: Vendors is the service for managing vendors.
    version: 0.0.1
paths:
    /v1alpha/vendors:
        get:
            tags:
                - Vendors
            description: ListVendors lists all vendors.
            operationId: Vendors_ListVendors
            parameters:
                - name: parent
                  in: query
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  schema:
                    type: string
                - name: filter
                  in: query
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListVendorsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Vendors
            description: CreateVendor creates a new vendor.
            operationId: Vendors_CreateVendor
            parameters:
                - name: parent
                  in: query
                  schema:
                    type: string
                - name: vendorId
                  in: query
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Vendor'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Vendor'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1alpha/vendors/{vendor}:
        get:
            tags:
                - Vendors
            description: GetVendor gets a vendor by name.
            operationId: Vendors_GetVendor
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Vendor'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Vendors
            description: DeleteVendor deletes a vendor by name.
            operationId: Vendors_DeleteVendor
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - Vendors
            description: UpdateVendor updates a vendor.
            operationId: Vendors_UpdateVendor
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: vendor.name
                  in: query
                  description: The resource name of this Vendor.
                  schema:
                    type: string
                - name: vendor.vendorId
                  in: query
                  description: The resource ID of this Vendor within its parent resource.
                  schema:
                    type: string
                - name: vendor.uid
                  in: query
                  description: |-
                    Server assigned unique identifier for the Vendor. The value
                     is a UUID4 string and guaranteed to remain unchanged until the resource is
                     deleted.
                  schema:
                    type: string
                - name: vendor.displayName
                  in: query
                  description: |-
                    Human-readable display name of this Vendor that you can modify.
                     The maximum length is 63 characters.
                  schema:
                    type: string
                - name: vendor.createTime
                  in: query
                  description: Output only. The time when the Vendor is created.
                  schema:
                    type: string
                    format: date-time
                - name: vendor.updateTime
                  in: query
                  description: Output only. The last time that the Vendor is updated.
                  schema:
                    type: string
                    format: date-time
                - name: vendor.deleteTime
                  in: query
                  description: |-
                    Output only. For a deleted resource, the deletion time. It is only
                     populated as a response to a Delete request.
                  schema:
                    type: string
                    format: date-time
                - name: vendor.reconciling
                  in: query
                  description: Output only. If set, there are currently changes in flight to the Vendor.
                  schema:
                    type: boolean
                - name: vendor.etag
                  in: query
                  description: |-
                    This checksum is computed by the server based on the value of
                     other fields, and might be sent on update requests to ensure the client has
                     an up-to-date value before proceeding.
                  schema:
                    type: string
                - name: vendor.spec.fullname
                  in: query
                  description: The name of the company or individual contractor.
                  schema:
                    type: string
                - name: vendor.spec.corporationType
                  in: query
                  description: The type of corporation (e.g. LLC, S-Corp, C-Corp).
                  schema:
                    type: string
                - name: vendor.spec.corporationDba
                  in: query
                  description: The DBA (Doing Business As) name of the corporation.
                  schema:
                    type: string
                - name: vendor.spec.description
                  in: query
                  description: The description of the corporation or contractor and the services it provides.
                  schema:
                    type: string
                - name: vendor.spec.taxId
                  in: query
                  description: The tax identifier of the corporation (e.g. 123456789).
                  schema:
                    type: string
                - name: vendor.spec.websiteUrl
                  in: query
                  description: The website of the corporation or contractor.
                  schema:
                    type: string
                - name: vendor.spec.address.revision
                  in: query
                  description: |-
                    The schema revision of the `PostalAddress`. This must be set to 0, which is
                     the latest revision.

                     All new revisions **must** be backward compatible with old revisions.
                  schema:
                    type: integer
                    format: int32
                - name: vendor.spec.address.regionCode
                  in: query
                  description: |-
                    Required. CLDR region code of the country/region of the address. This
                     is never inferred and it is up to the user to ensure the value is
                     correct. See http://cldr.unicode.org/ and
                     http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html
                     for details. Example: "CH" for Switzerland.
                  schema:
                    type: string
                - name: vendor.spec.address.languageCode
                  in: query
                  description: |-
                    Optional. BCP-47 language code of the contents of this address (if
                     known). This is often the UI language of the input form or is expected
                     to match one of the languages used in the address' country/region, or their
                     transliterated equivalents.
                     This can affect formatting in certain countries, but is not critical
                     to the correctness of the data and will never affect any validation or
                     other non-formatting related operations.

                     If this value is not known, it should be omitted (rather than specifying a
                     possibly incorrect default).

                     Examples: "zh-Hant", "ja", "ja-Latn", "en".
                  schema:
                    type: string
                - name: vendor.spec.address.postalCode
                  in: query
                  description: |-
                    Optional. Postal code of the address. Not all countries use or require
                     postal codes to be present, but where they are used, they may trigger
                     additional validation with other parts of the address (e.g. state/zip
                     validation in the U.S.A.).
                  schema:
                    type: string
                - name: vendor.spec.address.sortingCode
                  in: query
                  description: |-
                    Optional. Additional, country-specific, sorting code. This is not used
                     in most regions. Where it is used, the value is either a string like
                     "CEDEX", optionally followed by a number (e.g. "CEDEX 7"), or just a number
                     alone, representing the "sector code" (Jamaica), "delivery area indicator"
                     (Malawi) or "post office indicator" (e.g. Côte d'Ivoire).
                  schema:
                    type: string
                - name: vendor.spec.address.administrativeArea
                  in: query
                  description: |-
                    Optional. Highest administrative subdivision which is used for postal
                     addresses of a country or region.
                     For example, this can be a state, a province, an oblast, or a prefecture.
                     Specifically, for Spain this is the province and not the autonomous
                     community (e.g. "Barcelona" and not "Catalonia").
                     Many countries don't use an administrative area in postal addresses. E.g.
                     in Switzerland this should be left unpopulated.
                  schema:
                    type: string
                - name: vendor.spec.address.locality
                  in: query
                  description: |-
                    Optional. Generally refers to the city/town portion of the address.
                     Examples: US city, IT comune, UK post town.
                     In regions of the world where localities are not well defined or do not fit
                     into this structure well, leave locality empty and use address_lines.
                  schema:
                    type: string
                - name: vendor.spec.address.sublocality
                  in: query
                  description: |-
                    Optional. Sublocality of the address.
                     For example, this can be neighborhoods, boroughs, districts.
                  schema:
                    type: string
                - name: vendor.spec.address.addressLines
                  in: query
                  description: |-
                    Unstructured address lines describing the lower levels of an address.

                     Because values in address_lines do not have type information and may
                     sometimes contain multiple values in a single field (e.g.
                     "Austin, TX"), it is important that the line order is clear. The order of
                     address lines should be "envelope order" for the country/region of the
                     address. In places where this can vary (e.g. Japan), address_language is
                     used to make it explicit (e.g. "ja" for large-to-small ordering and
                     "ja-Latn" or "en" for small-to-large). This way, the most specific line of
                     an address can be selected based on the language.

                     The minimum permitted structural representation of an address consists
                     of a region_code with all remaining information placed in the
                     address_lines. It would be possible to format such an address very
                     approximately without geocoding, but no semantic reasoning could be
                     made about any of the address components until it was at least
                     partially resolved.

                     Creating an address only containing a region_code and address_lines, and
                     then geocoding is the recommended way to handle completely unstructured
                     addresses (as opposed to guessing which parts of the address should be
                     localities or administrative areas).
                  schema:
                    type: array
                    items:
                        type: string
                - name: vendor.spec.address.recipients
                  in: query
                  description: |-
                    Optional. The recipient at the address.
                     This field may, under certain circumstances, contain multiline information.
                     For example, it might contain "care of" information.
                  schema:
                    type: array
                    items:
                        type: string
                - name: vendor.spec.address.organization
                  in: query
                  description: Optional. The name of the organization at the address.
                  schema:
                    type: string
                - name: updateMask
                  in: query
                  schema:
                    type: string
                    format: field-mask
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Vendor'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListVendorsResponse:
            type: object
            properties:
                vendors:
                    type: array
                    items:
                        $ref: '#/components/schemas/Vendor'
                nextPageToken:
                    type: string
            description: ListVendorsResponse is the response for listing vendors.
        PostalAddress:
            type: object
            properties:
                revision:
                    type: integer
                    description: |-
                        The schema revision of the `PostalAddress`. This must be set to 0, which is
                         the latest revision.

                         All new revisions **must** be backward compatible with old revisions.
                    format: int32
                regionCode:
                    type: string
                    description: |-
                        Required. CLDR region code of the country/region of the address. This
                         is never inferred and it is up to the user to ensure the value is
                         correct. See http://cldr.unicode.org/ and
                         http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html
                         for details. Example: "CH" for Switzerland.
                languageCode:
                    type: string
                    description: |-
                        Optional. BCP-47 language code of the contents of this address (if
                         known). This is often the UI language of the input form or is expected
                         to match one of the languages used in the address' country/region, or their
                         transliterated equivalents.
                         This can affect formatting in certain countries, but is not critical
                         to the correctness of the data and will never affect any validation or
                         other non-formatting related operations.

                         If this value is not known, it should be omitted (rather than specifying a
                         possibly incorrect default).

                         Examples: "zh-Hant", "ja", "ja-Latn", "en".
                postalCode:
                    type: string
                    description: |-
                        Optional. Postal code of the address. Not all countries use or require
                         postal codes to be present, but where they are used, they may trigger
                         additional validation with other parts of the address (e.g. state/zip
                         validation in the U.S.A.).
                sortingCode:
                    type: string
                    description: |-
                        Optional. Additional, country-specific, sorting code. This is not used
                         in most regions. Where it is used, the value is either a string like
                         "CEDEX", optionally followed by a number (e.g. "CEDEX 7"), or just a number
                         alone, representing the "sector code" (Jamaica), "delivery area indicator"
                         (Malawi) or "post office indicator" (e.g. Côte d'Ivoire).
                administrativeArea:
                    type: string
                    description: |-
                        Optional. Highest administrative subdivision which is used for postal
                         addresses of a country or region.
                         For example, this can be a state, a province, an oblast, or a prefecture.
                         Specifically, for Spain this is the province and not the autonomous
                         community (e.g. "Barcelona" and not "Catalonia").
                         Many countries don't use an administrative area in postal addresses. E.g.
                         in Switzerland this should be left unpopulated.
                locality:
                    type: string
                    description: |-
                        Optional. Generally refers to the city/town portion of the address.
                         Examples: US city, IT comune, UK post town.
                         In regions of the world where localities are not well defined or do not fit
                         into this structure well, leave locality empty and use address_lines.
                sublocality:
                    type: string
                    description: |-
                        Optional. Sublocality of the address.
                         For example, this can be neighborhoods, boroughs, districts.
                addressLines:
                    type: array
                    items:
                        type: string
                    description: |-
                        Unstructured address lines describing the lower levels of an address.

                         Because values in address_lines do not have type information and may
                         sometimes contain multiple values in a single field (e.g.
                         "Austin, TX"), it is important that the line order is clear. The order of
                         address lines should be "envelope order" for the country/region of the
                         address. In places where this can vary (e.g. Japan), address_language is
                         used to make it explicit (e.g. "ja" for large-to-small ordering and
                         "ja-Latn" or "en" for small-to-large). This way, the most specific line of
                         an address can be selected based on the language.

                         The minimum permitted structural representation of an address consists
                         of a region_code with all remaining information placed in the
                         address_lines. It would be possible to format such an address very
                         approximately without geocoding, but no semantic reasoning could be
                         made about any of the address components until it was at least
                         partially resolved.

                         Creating an address only containing a region_code and address_lines, and
                         then geocoding is the recommended way to handle completely unstructured
                         addresses (as opposed to guessing which parts of the address should be
                         localities or administrative areas).
                recipients:
                    type: array
                    items:
                        type: string
                    description: |-
                        Optional. The recipient at the address.
                         This field may, under certain circumstances, contain multiline information.
                         For example, it might contain "care of" information.
                organization:
                    type: string
                    description: Optional. The name of the organization at the address.
            description: |-
                Represents a postal address, e.g. for postal delivery or payments addresses.
                 Given a postal address, a postal service can deliver items to a premise, P.O.
                 Box or similar.
                 It is not intended to model geographical locations (roads, towns,
                 mountains).

                 In typical usage an address would be created via user input or from importing
                 existing data, depending on the type of process.

                 Advice on address input / editing:
                  - Use an i18n-ready address widget such as
                    https://github.com/google/libaddressinput)
                 - Users should not be presented with UI elements for input or editing of
                   fields outside countries where that field is used.

                 For more guidance on how to use this schema, please see:
                 https://support.google.com/business/answer/6397478
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        Vendor:
            required:
                - spec
            type: object
            properties:
                name:
                    readOnly: true
                    type: string
                    description: The resource name of this Vendor.
                vendorId:
                    readOnly: true
                    type: string
                    description: The resource ID of this Vendor within its parent resource.
                uid:
                    readOnly: true
                    type: string
                    description: |-
                        Server assigned unique identifier for the Vendor. The value
                         is a UUID4 string and guaranteed to remain unchanged until the resource is
                         deleted.
                displayName:
                    type: string
                    description: |-
                        Human-readable display name of this Vendor that you can modify.
                         The maximum length is 63 characters.
                annotations:
                    type: object
                    additionalProperties:
                        type: string
                    description: |-
                        Annotations is an unstructured key-value map stored with a Vendor that
                         may be set by external tools to store and retrieve arbitrary metadata.
                         They are not queryable and should be preserved when modifying objects.
                labels:
                    type: object
                    additionalProperties:
                        type: string
                    description: |-
                        Labels is an unstructured key-value map stored with a Vendor that
                         may be set by external tools to enable platform features which identify
                         Vendors via label selections.
                createTime:
                    readOnly: true
                    type: string
                    description: Output only. The time when the Vendor is created.
                    format: date-time
                updateTime:
                    readOnly: true
                    type: string
                    description: Output only. The last time that the Vendor is updated.
                    format: date-time
                deleteTime:
                    readOnly: true
                    type: string
                    description: |-
                        Output only. For a deleted resource, the deletion time. It is only
                         populated as a response to a Delete request.
                    format: date-time
                reconciling:
                    readOnly: true
                    type: boolean
                    description: Output only. If set, there are currently changes in flight to the Vendor.
                etag:
                    readOnly: true
                    type: string
                    description: |-
                        This checksum is computed by the server based on the value of
                         other fields, and might be sent on update requests to ensure the client has
                         an up-to-date value before proceeding.
                spec:
                    allOf:
                        - $ref: '#/components/schemas/VendorSpec'
                    description: The specification of the Vendor.
            description: Vendor is a resource representing a Vendor.
        VendorSpec:
            required:
                - fullname
            type: object
            properties:
                fullname:
                    type: string
                    description: The name of the company or individual contractor.
                corporationType:
                    type: string
                    description: The type of corporation (e.g. LLC, S-Corp, C-Corp).
                corporationDba:
                    type: string
                    description: The DBA (Doing Business As) name of the corporation.
                description:
                    type: string
                    description: The description of the corporation or contractor and the services it provides.
                taxId:
                    type: string
                    description: The tax identifier of the corporation (e.g. 123456789).
                websiteUrl:
                    type: string
                    description: The website of the corporation or contractor.
                address:
                    allOf:
                        - $ref: '#/components/schemas/PostalAddress'
                    description: The physical address of the corporation.
            description: VendorSpec is the specification of a Vendor.
tags:
    - name: Vendors
