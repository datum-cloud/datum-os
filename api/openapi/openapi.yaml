# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /v1alpha/invoices:
        post:
            tags:
                - Invoices
            description: CreateInvoice creates an Invoice.
            operationId: Invoices_CreateInvoice
            parameters:
                - name: invoiceId
                  in: query
                  description: |-
                    The ID to use for the Invoice. If not specified, an ID will be automatically generated.
                     If the ID is automatically generated, the Client is responsible for reconciliation.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.Invoice'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/invoices/{invoice}:
        get:
            tags:
                - Invoices
            description: ListInvoices lists Invoices.
            operationId: Invoices_ListInvoices
            parameters:
                - name: invoice
                  in: path
                  description: The invoice id.
                  required: true
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  description: |-
                    The maximum number of Invoices to return. The service may return fewer than this value.
                     If unspecified, at most 50 Invoices will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: |-
                    A page token, received from a previous `ListInvoices` call. Provide this to retrieve the subsequent page.
                     When paginating, all other parameters must match the call that provided the page token.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: A filter expression that filters the Invoices to be listed.
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: The order by fields for the Invoices. The default order is ascending. There is no descending order.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.ListInvoicesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - Invoices
            description: DeleteInvoice deletes an Invoice.
            operationId: Invoices_DeleteInvoice
            parameters:
                - name: invoice
                  in: path
                  description: The invoice id.
                  required: true
                  schema:
                    type: string
                - name: etag
                  in: query
                  description: |-
                    The etag of the Invoice to delete. If this is not provided, the Invoice will be deleted unconditionally.
                     If provided, the Invoice will be deleted only if the etag matches the etag of the currently stored Invoice.
                     If the etag is provided and does not match the etag of the currently stored Invoice, the request will be rejected.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        patch:
            tags:
                - Invoices
            description: UpdateInvoice updates an Invoice.
            operationId: Invoices_UpdateInvoice
            parameters:
                - name: invoice
                  in: path
                  description: The invoice id.
                  required: true
                  schema:
                    type: string
                - name: updateMask
                  in: query
                  description: The update mask for the Invoice.
                  schema:
                    type: string
                    format: field-mask
                - name: allowMissing
                  in: query
                  description: |-
                    Allow missing Invoice. If true, the Invoice will be created if it does not exist. In this case,
                     field_mask is ignored.
                  schema:
                    type: boolean
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.Invoice'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/organizations:
        get:
            tags:
                - Organizations
            description: ListOrganizations lists all Organizations.
            operationId: Organizations_ListOrganizations
            parameters:
                - name: pageSize
                  in: query
                  description: |-
                    The maximum number of Organizations to return. The service may return fewer than this value.
                     If unspecified, at most 50 Organizations will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: |-
                    A page token, received from a previous `ListOrganizations` call. Provide this to retrieve the subsequent page.
                     When paginating, all other parameters must match the call that provided the page token.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: A filter expression that filters the Organizations to be listed.
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: The order by fields for the Organizations. The default order is ascending. There is no descending order.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.organizationmanager.v1alpha.ListOrganizationsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - Organizations
            description: CreateOrganization creates a new Organization.
            operationId: Organizations_CreateOrganization
            parameters:
                - name: organizationId
                  in: query
                  description: |-
                    The ID to use for the Organization. If not specified, an ID will be automatically generated.
                     If the ID is automatically generated, the Client is responsible for reconciliation.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.organizationmanager.v1alpha.Organization'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/organizations/{organization}:
        get:
            tags:
                - Organizations
            description: GetOrganization gets an Organization by name.
            operationId: Organizations_GetOrganization
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.organizationmanager.v1alpha.Organization'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - Organizations
            description: DeleteOrganization deletes an Organization by name.
            operationId: Organizations_DeleteOrganization
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: etag
                  in: query
                  description: |-
                    The etag of the Organization to delete. If this is not the same etag as the currently stored Organization,
                     the request will be rejected. If not provided, the Organization will be deleted unconditionally.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        patch:
            tags:
                - Organizations
            description: UpdateOrganization updates an Organization.
            operationId: Organizations_UpdateOrganization
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: updateMask
                  in: query
                  description: The field mask to update the Organization.
                  schema:
                    type: string
                    format: field-mask
                - name: allowMissing
                  in: query
                  description: |-
                    Allow missing Organization. If true, the Organization will be created if it does not exist. In this case,
                     field_mask is ignored.
                  schema:
                    type: boolean
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.organizationmanager.v1alpha.Organization'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/organizations/{organization}/invoices:
        post:
            tags:
                - Invoices
            description: CreateInvoice creates an Invoice.
            operationId: Invoices_CreateInvoice
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: invoiceId
                  in: query
                  description: |-
                    The ID to use for the Invoice. If not specified, an ID will be automatically generated.
                     If the ID is automatically generated, the Client is responsible for reconciliation.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.Invoice'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/organizations/{organization}/invoices/{invoice}:
        get:
            tags:
                - Invoices
            description: ListInvoices lists Invoices.
            operationId: Invoices_ListInvoices
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: invoice
                  in: path
                  description: The invoice id.
                  required: true
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  description: |-
                    The maximum number of Invoices to return. The service may return fewer than this value.
                     If unspecified, at most 50 Invoices will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: |-
                    A page token, received from a previous `ListInvoices` call. Provide this to retrieve the subsequent page.
                     When paginating, all other parameters must match the call that provided the page token.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: A filter expression that filters the Invoices to be listed.
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: The order by fields for the Invoices. The default order is ascending. There is no descending order.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.ListInvoicesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - Invoices
            description: DeleteInvoice deletes an Invoice.
            operationId: Invoices_DeleteInvoice
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: invoice
                  in: path
                  description: The invoice id.
                  required: true
                  schema:
                    type: string
                - name: etag
                  in: query
                  description: |-
                    The etag of the Invoice to delete. If this is not provided, the Invoice will be deleted unconditionally.
                     If provided, the Invoice will be deleted only if the etag matches the etag of the currently stored Invoice.
                     If the etag is provided and does not match the etag of the currently stored Invoice, the request will be rejected.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        patch:
            tags:
                - Invoices
            description: UpdateInvoice updates an Invoice.
            operationId: Invoices_UpdateInvoice
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: invoice
                  in: path
                  description: The invoice id.
                  required: true
                  schema:
                    type: string
                - name: updateMask
                  in: query
                  description: The update mask for the Invoice.
                  schema:
                    type: string
                    format: field-mask
                - name: allowMissing
                  in: query
                  description: |-
                    Allow missing Invoice. If true, the Invoice will be created if it does not exist. In this case,
                     field_mask is ignored.
                  schema:
                    type: boolean
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.Invoice'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/organizations/{organization}/vendors:
        get:
            tags:
                - Vendors
            description: ListVendors lists all Vendors.
            operationId: Vendors_ListVendors
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  description: |-
                    The maximum number of Vendors to return. The service may return fewer than this value.
                     If unspecified, at most 50 Vendors will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: |-
                    A page token, received from a previous `ListVendors` call. Provide this to retrieve the subsequent page.
                     When paginating, all other parameters must match the call that provided the page token.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: A filter expression that filters the Vendors to be listed.
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: The order by fields for the Vendors. The default order is ascending. There is no descending order.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.ListVendorsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - Vendors
            description: CreateVendor creates a new Vendor.
            operationId: Vendors_CreateVendor
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: vendorId
                  in: query
                  description: |-
                    The ID to use for the Vendor. If not specified, an ID will be automatically generated.
                     If the ID is automatically generated, the Client is responsible for reconciliation.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.Vendor'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/organizations/{organization}/vendors/{vendor}:
        get:
            tags:
                - Vendors
            description: GetVendor gets a Vendor by name.
            operationId: Vendors_GetVendor
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.Vendor'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - Vendors
            description: DeleteVendor deletes a Vendor by name.
            operationId: Vendors_DeleteVendor
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: etag
                  in: query
                  description: |-
                    The etag of the Vendor to delete. If this is not the same etag as the currently stored Vendor,
                     the request will be rejected. If not provided, the Vendor will be deleted unconditionally.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        patch:
            tags:
                - Vendors
            description: UpdateVendor updates a Vendor.
            operationId: Vendors_UpdateVendor
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: updateMask
                  in: query
                  description: The field mask to update the Vendor.
                  schema:
                    type: string
                    format: field-mask
                - name: allowMissing
                  in: query
                  description: |-
                    Allow missing Vendor. If true, the Vendor will be created if it does not exist. In this case,
                     field_mask is ignored.
                  schema:
                    type: boolean
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.Vendor'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/vendors:
        get:
            tags:
                - Vendors
            description: ListVendors lists all Vendors.
            operationId: Vendors_ListVendors
            parameters:
                - name: pageSize
                  in: query
                  description: |-
                    The maximum number of Vendors to return. The service may return fewer than this value.
                     If unspecified, at most 50 Vendors will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: |-
                    A page token, received from a previous `ListVendors` call. Provide this to retrieve the subsequent page.
                     When paginating, all other parameters must match the call that provided the page token.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: A filter expression that filters the Vendors to be listed.
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: The order by fields for the Vendors. The default order is ascending. There is no descending order.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.ListVendorsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - Vendors
            description: CreateVendor creates a new Vendor.
            operationId: Vendors_CreateVendor
            parameters:
                - name: vendorId
                  in: query
                  description: |-
                    The ID to use for the Vendor. If not specified, an ID will be automatically generated.
                     If the ID is automatically generated, the Client is responsible for reconciliation.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.Vendor'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/vendors/{vendor}:
        get:
            tags:
                - Vendors
            description: GetVendor gets a Vendor by name.
            operationId: Vendors_GetVendor
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.Vendor'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - Vendors
            description: DeleteVendor deletes a Vendor by name.
            operationId: Vendors_DeleteVendor
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: etag
                  in: query
                  description: |-
                    The etag of the Vendor to delete. If this is not the same etag as the currently stored Vendor,
                     the request will be rejected. If not provided, the Vendor will be deleted unconditionally.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        patch:
            tags:
                - Vendors
            description: UpdateVendor updates a Vendor.
            operationId: Vendors_UpdateVendor
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: updateMask
                  in: query
                  description: The field mask to update the Vendor.
                  schema:
                    type: string
                    format: field-mask
                - name: allowMissing
                  in: query
                  description: |-
                    Allow missing Vendor. If true, the Vendor will be created if it does not exist. In this case,
                     field_mask is ignored.
                  schema:
                    type: boolean
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.Vendor'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/vendors/{vendor}/invoices:
        post:
            tags:
                - Invoices
            description: CreateInvoice creates an Invoice.
            operationId: Invoices_CreateInvoice
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: invoiceId
                  in: query
                  description: |-
                    The ID to use for the Invoice. If not specified, an ID will be automatically generated.
                     If the ID is automatically generated, the Client is responsible for reconciliation.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.Invoice'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/vendors/{vendor}/invoices/{invoice}:
        get:
            tags:
                - Invoices
            description: ListInvoices lists Invoices.
            operationId: Invoices_ListInvoices
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: invoice
                  in: path
                  description: The invoice id.
                  required: true
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  description: |-
                    The maximum number of Invoices to return. The service may return fewer than this value.
                     If unspecified, at most 50 Invoices will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: |-
                    A page token, received from a previous `ListInvoices` call. Provide this to retrieve the subsequent page.
                     When paginating, all other parameters must match the call that provided the page token.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: A filter expression that filters the Invoices to be listed.
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: The order by fields for the Invoices. The default order is ascending. There is no descending order.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.ListInvoicesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - Invoices
            description: DeleteInvoice deletes an Invoice.
            operationId: Invoices_DeleteInvoice
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: invoice
                  in: path
                  description: The invoice id.
                  required: true
                  schema:
                    type: string
                - name: etag
                  in: query
                  description: |-
                    The etag of the Invoice to delete. If this is not provided, the Invoice will be deleted unconditionally.
                     If provided, the Invoice will be deleted only if the etag matches the etag of the currently stored Invoice.
                     If the etag is provided and does not match the etag of the currently stored Invoice, the request will be rejected.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        patch:
            tags:
                - Invoices
            description: UpdateInvoice updates an Invoice.
            operationId: Invoices_UpdateInvoice
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: invoice
                  in: path
                  description: The invoice id.
                  required: true
                  schema:
                    type: string
                - name: updateMask
                  in: query
                  description: The update mask for the Invoice.
                  schema:
                    type: string
                    format: field-mask
                - name: allowMissing
                  in: query
                  description: |-
                    Allow missing Invoice. If true, the Invoice will be created if it does not exist. In this case,
                     field_mask is ignored.
                  schema:
                    type: boolean
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.Invoice'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
components:
    schemas:
        datum.os.invoicesmanager.v1alpha.Invoice:
            required:
                - spec
            type: object
            properties:
                name:
                    readOnly: true
                    type: string
                    description: The resource name of this Invoice.
                invoiceId:
                    readOnly: true
                    type: string
                    description: The resource ID of this Invoice within its parent resource.
                uid:
                    readOnly: true
                    type: string
                    description: |-
                        Server assigned unique identifier for the Invoice. The value
                         is a UUID4 string and guaranteed to remain unchanged until the resource is
                         deleted.
                displayName:
                    type: string
                    description: |-
                        Human-readable display name of this Invoice that you can modify.
                         The maximum length is 63 characters.
                annotations:
                    type: object
                    additionalProperties:
                        type: string
                    description: |-
                        Annotations is an unstructured key-value map stored with a Invoice that
                         may be set by external tools to store and retrieve arbitrary metadata.
                         They are not queryable and should be preserved when modifying objects.
                labels:
                    type: object
                    additionalProperties:
                        type: string
                    description: |-
                        Labels is an unstructured key-value map stored with a Invoice that
                         may be set by external tools to enable platform features which identify
                         Invoices via label selections.
                createTime:
                    readOnly: true
                    type: string
                    description: Output only. The time when the Invoice is created.
                    format: date-time
                updateTime:
                    readOnly: true
                    type: string
                    description: Output only. The last time that the Invoice is updated.
                    format: date-time
                deleteTime:
                    readOnly: true
                    type: string
                    description: |-
                        Output only. For a deleted resource, the deletion time. It is only
                         populated as a response to a Delete request.
                    format: date-time
                reconciling:
                    readOnly: true
                    type: boolean
                    description: Output only. If set, there are currently changes in flight to the Invoice.
                etag:
                    readOnly: true
                    type: string
                    description: |-
                        This checksum is computed by the server based on the value of
                         other fields, and might be sent on update requests to ensure the client has
                         an up-to-date value before proceeding.
                spec:
                    allOf:
                        - $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.Invoice_Spec'
                    description: Spec is the specification of the Invoice.
                status:
                    readOnly: true
                    allOf:
                        - $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.Invoice_Status'
                    description: Status is the current status of the Invoice.
            description: "Invoice is a resource representing an Invoice from an organization to a \n customer account or from a vendor to an organization."
        datum.os.invoicesmanager.v1alpha.Invoice_Spec:
            type: object
            properties: {}
            description: Spec is the specification of the Invoice. TODO!
        datum.os.invoicesmanager.v1alpha.Invoice_Status:
            type: object
            properties: {}
            description: Status is the current status of the Invoice. TODO!
        datum.os.invoicesmanager.v1alpha.ListInvoicesResponse:
            type: object
            properties:
                invoices:
                    type: array
                    items:
                        $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.Invoice'
                    description: The list of Invoices.
                nextPageToken:
                    type: string
                    description: |-
                        A token to retrieve the next page of results.
                         Pass this value in the ListInvoicesRequest.page_token field in a subsequent call to `ListInvoices` to retrieve the next page of results.
                         If the page token is not set, there are no more results.
            description: ListInvoicesResponse is the response for listing Invoices.
        datum.os.organizationmanager.v1alpha.ListOrganizationsResponse:
            type: object
            properties:
                organizations:
                    type: array
                    items:
                        $ref: '#/components/schemas/datum.os.organizationmanager.v1alpha.Organization'
                    description: The list of Organizations.
                nextPageToken:
                    type: string
                    description: |-
                        A token to retrieve the next page of results.
                         Pass this value in the ListOrganizationsRequest.page_token field in a subsequent call to `ListOrganizations` to retrieve the next page of results.
                         If the page token is not set, there are no more results.
            description: ListOrganizationsResponse is the response for listing Organizations.
        datum.os.organizationmanager.v1alpha.Organization:
            required:
                - spec
            type: object
            properties:
                name:
                    readOnly: true
                    type: string
                    description: The resource name of this Organization.
                organizationId:
                    readOnly: true
                    type: string
                    description: The resource ID of this Organization within its parent resource.
                uid:
                    readOnly: true
                    type: string
                    description: |-
                        Server assigned unique identifier for the Organization. The value
                         is a UUID4 string and guaranteed to remain unchanged until the resource is
                         deleted.
                displayName:
                    type: string
                    description: |-
                        Human-readable display name of this Organization that you can modify.
                         The maximum length is 63 characters.
                annotations:
                    type: object
                    additionalProperties:
                        type: string
                    description: |-
                        Annotations is an unstructured key-value map stored with a Organization that
                         may be set by external tools to store and retrieve arbitrary metadata.
                         They are not queryable and should be preserved when modifying objects.
                labels:
                    type: object
                    additionalProperties:
                        type: string
                    description: |-
                        Labels is an unstructured key-value map stored with a Organization that
                         may be set by external tools to enable platform features which identify
                         Organizations via label selections.
                createTime:
                    readOnly: true
                    type: string
                    description: Output only. The time when the Organization is created.
                    format: date-time
                updateTime:
                    readOnly: true
                    type: string
                    description: Output only. The last time that the Organization is updated.
                    format: date-time
                deleteTime:
                    readOnly: true
                    type: string
                    description: |-
                        Output only. For a deleted resource, the deletion time. It is only
                         populated as a response to a Delete request.
                    format: date-time
                reconciling:
                    readOnly: true
                    type: boolean
                    description: Output only. If set, there are currently changes in flight to the Organization.
                etag:
                    readOnly: true
                    type: string
                    description: |-
                        This checksum is computed by the server based on the value of
                         other fields, and might be sent on update requests to ensure the client has
                         an up-to-date value before proceeding.
                spec:
                    allOf:
                        - $ref: '#/components/schemas/datum.os.organizationmanager.v1alpha.Spec'
                    description: The specifications of the Organization.
                status:
                    readOnly: true
                    allOf:
                        - $ref: '#/components/schemas/datum.os.organizationmanager.v1alpha.Status'
                    description: The status of the Organization.
            description: Organization is a resource representing an Organization.
        datum.os.organizationmanager.v1alpha.Spec:
            type: object
            properties: {}
            description: OrganizationSpec is the specification of an Organization. TODO!
        datum.os.organizationmanager.v1alpha.Status:
            type: object
            properties: {}
            description: OrganizationStatus is the status of an Organization. TODO!
        datum.os.vendormanager.v1alpha.ListVendorsResponse:
            type: object
            properties:
                vendors:
                    type: array
                    items:
                        $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.Vendor'
                    description: The list of Vendors.
                nextPageToken:
                    type: string
                    description: |-
                        A token to retrieve the next page of results.
                         Pass this value in the ListVendorsRequest.page_token field in a subsequent call to `ListVendors` to retrieve the next page of results.
                         If the page token is not set, there are no more results.
            description: ListVendorsResponse is the response for listing Vendors.
        datum.os.vendormanager.v1alpha.Vendor:
            required:
                - spec
            type: object
            properties:
                name:
                    readOnly: true
                    type: string
                    description: |-
                        The resource name of this Vendor.
                         Format: vendors/{vendor}
                         Format: organizations/{organization}/vendors/{vendor}
                vendorId:
                    readOnly: true
                    type: string
                    description: The resource ID of this Vendor within its parent resource.
                uid:
                    readOnly: true
                    type: string
                    description: |-
                        Server assigned unique identifier for the Vendor. The value
                         is a UUID4 string and guaranteed to remain unchanged until the resource is
                         deleted.
                displayName:
                    type: string
                    description: |-
                        Human-readable display name of this Vendor that you can modify.
                         The maximum length is 63 characters.
                annotations:
                    type: object
                    additionalProperties:
                        type: string
                    description: |-
                        Annotations is an unstructured key-value map stored with a Vendor that
                         may be set by external tools to store and retrieve arbitrary metadata.
                         They are not queryable and should be preserved when modifying objects.
                labels:
                    type: object
                    additionalProperties:
                        type: string
                    description: |-
                        Labels is an unstructured key-value map stored with a Vendor that
                         may be set by external tools to enable platform features which identify
                         Vendors via label selections.
                createTime:
                    readOnly: true
                    type: string
                    description: Output only. The time when the Vendor is created.
                    format: date-time
                updateTime:
                    readOnly: true
                    type: string
                    description: Output only. The last time that the Vendor is updated.
                    format: date-time
                deleteTime:
                    readOnly: true
                    type: string
                    description: |-
                        Output only. For a deleted resource, the deletion time. It is only
                         populated as a response to a Delete request.
                    format: date-time
                reconciling:
                    readOnly: true
                    type: boolean
                    description: Output only. If set, there are currently changes in flight to the Vendor.
                etag:
                    readOnly: true
                    type: string
                    description: |-
                        This checksum is computed by the server based on the value of
                         other fields, and might be sent on update requests to ensure the client has
                         an up-to-date value before proceeding.
                spec:
                    allOf:
                        - $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.Vendor_Spec'
                    description: The specification of the Vendor.
            description: Vendor is a resource representing a Vendor.
        datum.os.vendormanager.v1alpha.Vendor_PaymentPreference:
            required:
                - preferred
                - method
            type: object
            properties:
                preferred:
                    type: boolean
                    description: Is this the preferred payment method?
                method:
                    enum:
                        - PAYMENT_METHOD_UNSPECIFIED
                        - PAYMENT_METHOD_DOMESTIC_WIRE_TRANSFER
                        - PAYMENT_METHOD_INTERNATIONAL_WIRE_TRANSFER
                        - PAYMENT_METHOD_ACH
                        - PAYMENT_METHOD_CREDIT_CARD
                    type: string
                    description: The payment method of the Vendor.
                    format: enum
            description: PaymentPreference is the payment preference of a Vendor.
        datum.os.vendormanager.v1alpha.Vendor_Profile:
            type: object
            properties:
                person:
                    type: string
                    description: The name of the person.
                corporation:
                    type: string
                    description: The name of the corporation.
                corporationType:
                    type: string
                    description: The type of corporation (e.g. LLC, S-Corp, C-Corp, Other).
                corporationDba:
                    type: string
                    description: The DBA (Doing Business As) name of the corporation.
                description:
                    type: string
                    description: The description of the corporation or contractor and the services it provides.
                websiteUri:
                    type: string
                    description: The URL of the website of the corporation or contractor.
                addresses:
                    type: array
                    items:
                        $ref: '#/components/schemas/google.type.PostalAddress'
                    description: The physical address of the person or corporation.
                phoneNumbers:
                    type: array
                    items:
                        $ref: '#/components/schemas/google.type.PhoneNumber'
                    description: The phone number of the person or corporation.
                paymentPreference:
                    type: array
                    items:
                        $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.Vendor_PaymentPreference'
                    description: The payment preference of the Vendor.
                taxInfo:
                    allOf:
                        - $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.Vendor_TaxInfo'
                    description: The tax information of the person or corporation.
            description: Profile is the profile of a Vendor.
        datum.os.vendormanager.v1alpha.Vendor_Spec:
            required:
                - type
                - profile
            type: object
            properties:
                type:
                    enum:
                        - VENDOR_TYPE_UNSPECIFIED
                        - VENDOR_TYPE_PERSON
                        - VENDOR_TYPE_CORPORATION
                    type: string
                    description: The type of Vendor as defined by the VendorType enum.
                    format: enum
                profile:
                    allOf:
                        - $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.Vendor_Profile'
                    description: The profile of the Vendor.
                state:
                    enum:
                        - ONBOARDING_STATE_UNSPECIFIED
                        - ONBOARDING_STATE_PENDING
                        - ONBOARDING_STATE_ACTIVE
                        - ONBOARDING_STATE_INACTIVE
                    type: string
                    description: "The onboarding state of the Vendor. Defaults to ONBOARDING_STATE_PENDING on creation.\n (-- api-linter: core::0216::state-field-output-only=disabled\n     aip.dev/not-precedent: We are modeling our Vendor APIs from Square's Vendor APIs. \n     The 'state' of a Vendor is not output only. It is settable by the user. --)"
                    format: enum
            description: Spec is the specification of a Vendor.
        datum.os.vendormanager.v1alpha.Vendor_TaxInfo:
            required:
                - taxId
                - taxIdType
            type: object
            properties:
                taxId:
                    type: string
                    description: The tax id of the person or corporation.
                taxIdType:
                    enum:
                        - TAX_ID_TYPE_UNSPECIFIED
                        - TAX_ID_TYPE_SSN
                        - TAX_ID_TYPE_EIN
                        - TAX_ID_TYPE_ATIN
                        - TAX_ID_TYPE_ITIN
                    type: string
                    description: The tax id type of the person or corporation.
                    format: enum
            description: TaxInfo is the tax information of a Vendor.
        google.longrunning.Operation:
            type: object
            properties:
                name:
                    type: string
                    description: |-
                        The server-assigned name, which is only unique within the same service that
                         originally returns it. If you use the default HTTP mapping, the
                         `name` should be a resource name ending with `operations/{unique_id}`.
                metadata:
                    allOf:
                        - $ref: '#/components/schemas/google.protobuf.Any'
                    description: |-
                        Service-specific metadata associated with the operation.  It typically
                         contains progress information and common metadata such as create time.
                         Some services might not provide such metadata.  Any method that returns a
                         long-running operation should document the metadata type, if any.
                done:
                    type: boolean
                    description: |-
                        If the value is `false`, it means the operation is still in progress.
                         If `true`, the operation is completed, and either `error` or `response` is
                         available.
                error:
                    allOf:
                        - $ref: '#/components/schemas/google.rpc.Status'
                    description: The error result of the operation in case of failure or cancellation.
                response:
                    allOf:
                        - $ref: '#/components/schemas/google.protobuf.Any'
                    description: |-
                        The normal response of the operation in case of success.  If the original
                         method returns no data on success, such as `Delete`, the response is
                         `google.protobuf.Empty`.  If the original method is standard
                         `Get`/`Create`/`Update`, the response should be the resource.  For other
                         methods, the response should have the type `XxxResponse`, where `Xxx`
                         is the original method name.  For example, if the original method name
                         is `TakeSnapshot()`, the inferred response type is
                         `TakeSnapshotResponse`.
            description: |-
                This resource represents a long-running operation that is the result of a
                 network API call.
        google.protobuf.Any:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        google.rpc.Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/google.protobuf.Any'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        google.type.PhoneNumber:
            type: object
            properties:
                e164Number:
                    type: string
                    description: |-
                        The phone number, represented as a leading plus sign ('+'), followed by a
                         phone number that uses a relaxed ITU E.164 format consisting of the
                         country calling code (1 to 3 digits) and the subscriber number, with no
                         additional spaces or formatting, e.g.:
                          - correct: "+15552220123"
                          - incorrect: "+1 (555) 222-01234 x123".

                         The ITU E.164 format limits the latter to 12 digits, but in practice not
                         all countries respect that, so we relax that restriction here.
                         National-only numbers are not allowed.

                         References:
                          - https://www.itu.int/rec/T-REC-E.164-201011-I
                          - https://en.wikipedia.org/wiki/E.164.
                          - https://en.wikipedia.org/wiki/List_of_country_calling_codes
                shortCode:
                    allOf:
                        - $ref: '#/components/schemas/google.type.PhoneNumber_ShortCode'
                    description: |-
                        A short code.

                         Reference(s):
                          - https://en.wikipedia.org/wiki/Short_code
                extension:
                    type: string
                    description: |-
                        The phone number's extension. The extension is not standardized in ITU
                         recommendations, except for being defined as a series of numbers with a
                         maximum length of 40 digits. Other than digits, some other dialing
                         characters such as ',' (indicating a wait) or '#' may be stored here.

                         Note that no regions currently use extensions with short codes, so this
                         field is normally only set in conjunction with an E.164 number. It is held
                         separately from the E.164 number to allow for short code extensions in the
                         future.
            description: |-
                An object representing a phone number, suitable as an API wire format.

                 This representation:

                  - should not be used for locale-specific formatting of a phone number, such
                    as "+1 (650) 253-0000 ext. 123"

                  - is not designed for efficient storage
                  - may not be suitable for dialing - specialized libraries (see references)
                    should be used to parse the number for that purpose

                 To do something meaningful with this number, such as format it for various
                 use-cases, convert it to an `i18n.phonenumbers.PhoneNumber` object first.

                 For instance, in Java this would be:

                    com.google.type.PhoneNumber wireProto =
                        com.google.type.PhoneNumber.newBuilder().build();
                    com.google.i18n.phonenumbers.Phonenumber.PhoneNumber phoneNumber =
                        PhoneNumberUtil.getInstance().parse(wireProto.getE164Number(), "ZZ");
                    if (!wireProto.getExtension().isEmpty()) {
                      phoneNumber.setExtension(wireProto.getExtension());
                    }

                  Reference(s):
                   - https://github.com/google/libphonenumber
        google.type.PhoneNumber_ShortCode:
            type: object
            properties:
                regionCode:
                    type: string
                    description: |-
                        Required. The BCP-47 region code of the location where calls to this
                         short code can be made, such as "US" and "BB".

                         Reference(s):
                          - http://www.unicode.org/reports/tr35/#unicode_region_subtag
                number:
                    type: string
                    description: |-
                        Required. The short code digits, without a leading plus ('+') or country
                         calling code, e.g. "611".
            description: |-
                An object representing a short code, which is a phone number that is
                 typically much shorter than regular phone numbers and can be used to
                 address messages in MMS and SMS systems, as well as for abbreviated dialing
                 (e.g. "Text 611 to see how many minutes you have remaining on your plan.").

                 Short codes are restricted to a region and are not internationally
                 dialable, which means the same short code can exist in different regions,
                 with different usage and pricing, even if those regions share the same
                 country calling code (e.g. US and CA).
        google.type.PostalAddress:
            type: object
            properties:
                revision:
                    type: integer
                    description: |-
                        The schema revision of the `PostalAddress`. This must be set to 0, which is
                         the latest revision.

                         All new revisions **must** be backward compatible with old revisions.
                    format: int32
                regionCode:
                    type: string
                    description: |-
                        Required. CLDR region code of the country/region of the address. This
                         is never inferred and it is up to the user to ensure the value is
                         correct. See http://cldr.unicode.org/ and
                         http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html
                         for details. Example: "CH" for Switzerland.
                languageCode:
                    type: string
                    description: |-
                        Optional. BCP-47 language code of the contents of this address (if
                         known). This is often the UI language of the input form or is expected
                         to match one of the languages used in the address' country/region, or their
                         transliterated equivalents.
                         This can affect formatting in certain countries, but is not critical
                         to the correctness of the data and will never affect any validation or
                         other non-formatting related operations.

                         If this value is not known, it should be omitted (rather than specifying a
                         possibly incorrect default).

                         Examples: "zh-Hant", "ja", "ja-Latn", "en".
                postalCode:
                    type: string
                    description: |-
                        Optional. Postal code of the address. Not all countries use or require
                         postal codes to be present, but where they are used, they may trigger
                         additional validation with other parts of the address (e.g. state/zip
                         validation in the U.S.A.).
                sortingCode:
                    type: string
                    description: |-
                        Optional. Additional, country-specific, sorting code. This is not used
                         in most regions. Where it is used, the value is either a string like
                         "CEDEX", optionally followed by a number (e.g. "CEDEX 7"), or just a number
                         alone, representing the "sector code" (Jamaica), "delivery area indicator"
                         (Malawi) or "post office indicator" (e.g. Côte d'Ivoire).
                administrativeArea:
                    type: string
                    description: |-
                        Optional. Highest administrative subdivision which is used for postal
                         addresses of a country or region.
                         For example, this can be a state, a province, an oblast, or a prefecture.
                         Specifically, for Spain this is the province and not the autonomous
                         community (e.g. "Barcelona" and not "Catalonia").
                         Many countries don't use an administrative area in postal addresses. E.g.
                         in Switzerland this should be left unpopulated.
                locality:
                    type: string
                    description: |-
                        Optional. Generally refers to the city/town portion of the address.
                         Examples: US city, IT comune, UK post town.
                         In regions of the world where localities are not well defined or do not fit
                         into this structure well, leave locality empty and use address_lines.
                sublocality:
                    type: string
                    description: |-
                        Optional. Sublocality of the address.
                         For example, this can be neighborhoods, boroughs, districts.
                addressLines:
                    type: array
                    items:
                        type: string
                    description: |-
                        Unstructured address lines describing the lower levels of an address.

                         Because values in address_lines do not have type information and may
                         sometimes contain multiple values in a single field (e.g.
                         "Austin, TX"), it is important that the line order is clear. The order of
                         address lines should be "envelope order" for the country/region of the
                         address. In places where this can vary (e.g. Japan), address_language is
                         used to make it explicit (e.g. "ja" for large-to-small ordering and
                         "ja-Latn" or "en" for small-to-large). This way, the most specific line of
                         an address can be selected based on the language.

                         The minimum permitted structural representation of an address consists
                         of a region_code with all remaining information placed in the
                         address_lines. It would be possible to format such an address very
                         approximately without geocoding, but no semantic reasoning could be
                         made about any of the address components until it was at least
                         partially resolved.

                         Creating an address only containing a region_code and address_lines, and
                         then geocoding is the recommended way to handle completely unstructured
                         addresses (as opposed to guessing which parts of the address should be
                         localities or administrative areas).
                recipients:
                    type: array
                    items:
                        type: string
                    description: |-
                        Optional. The recipient at the address.
                         This field may, under certain circumstances, contain multiline information.
                         For example, it might contain "care of" information.
                organization:
                    type: string
                    description: Optional. The name of the organization at the address.
            description: |-
                Represents a postal address, e.g. for postal delivery or payments addresses.
                 Given a postal address, a postal service can deliver items to a premise, P.O.
                 Box or similar.
                 It is not intended to model geographical locations (roads, towns,
                 mountains).

                 In typical usage an address would be created via user input or from importing
                 existing data, depending on the type of process.

                 Advice on address input / editing:
                  - Use an i18n-ready address widget such as
                    https://github.com/google/libaddressinput)
                 - Users should not be presented with UI elements for input or editing of
                   fields outside countries where that field is used.

                 For more guidance on how to use this schema, please see:
                 https://support.google.com/business/answer/6397478
tags:
    - name: Invoices
      description: Invoices is the service for managing Invoices.
    - name: Organizations
      description: |-
        Organizations is the service for managing Organizations.
         TODO: Add support for parent/child relationships for Organizations.
    - name: Vendors
      description: Vendors is the service for managing Vendors.
