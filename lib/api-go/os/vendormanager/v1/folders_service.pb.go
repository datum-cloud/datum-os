// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: datum/os/vendormanager/v1/folders_service.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateVendorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent     string                 `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Vendor     *Vendor                `protobuf:"bytes,2,opt,name=vendor,proto3" json:"vendor,omitempty"`
	VendorId   string                 `protobuf:"bytes,3,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,4,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *CreateVendorRequest) Reset() {
	*x = CreateVendorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datum_os_vendormanager_v1_folders_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVendorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVendorRequest) ProtoMessage() {}

func (x *CreateVendorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datum_os_vendormanager_v1_folders_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVendorRequest.ProtoReflect.Descriptor instead.
func (*CreateVendorRequest) Descriptor() ([]byte, []int) {
	return file_datum_os_vendormanager_v1_folders_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateVendorRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *CreateVendorRequest) GetVendor() *Vendor {
	if x != nil {
		return x.Vendor
	}
	return nil
}

func (x *CreateVendorRequest) GetVendorId() string {
	if x != nil {
		return x.VendorId
	}
	return ""
}

func (x *CreateVendorRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type GetVendorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetVendorRequest) Reset() {
	*x = GetVendorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datum_os_vendormanager_v1_folders_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVendorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVendorRequest) ProtoMessage() {}

func (x *GetVendorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datum_os_vendormanager_v1_folders_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVendorRequest.ProtoReflect.Descriptor instead.
func (*GetVendorRequest) Descriptor() ([]byte, []int) {
	return file_datum_os_vendormanager_v1_folders_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetVendorRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListVendorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent    string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	PageSize  int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Filter    string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	OrderBy   string `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
}

func (x *ListVendorsRequest) Reset() {
	*x = ListVendorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datum_os_vendormanager_v1_folders_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVendorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVendorsRequest) ProtoMessage() {}

func (x *ListVendorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datum_os_vendormanager_v1_folders_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVendorsRequest.ProtoReflect.Descriptor instead.
func (*ListVendorsRequest) Descriptor() ([]byte, []int) {
	return file_datum_os_vendormanager_v1_folders_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListVendorsRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ListVendorsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListVendorsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListVendorsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListVendorsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListVendorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vendors       []*Vendor `protobuf:"bytes,1,rep,name=vendors,proto3" json:"vendors,omitempty"`
	NextPageToken string    `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListVendorsResponse) Reset() {
	*x = ListVendorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datum_os_vendormanager_v1_folders_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVendorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVendorsResponse) ProtoMessage() {}

func (x *ListVendorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datum_os_vendormanager_v1_folders_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVendorsResponse.ProtoReflect.Descriptor instead.
func (*ListVendorsResponse) Descriptor() ([]byte, []int) {
	return file_datum_os_vendormanager_v1_folders_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListVendorsResponse) GetVendors() []*Vendor {
	if x != nil {
		return x.Vendors
	}
	return nil
}

func (x *ListVendorsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type UpdateVendorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vendor     *Vendor                `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateVendorRequest) Reset() {
	*x = UpdateVendorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datum_os_vendormanager_v1_folders_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVendorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVendorRequest) ProtoMessage() {}

func (x *UpdateVendorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datum_os_vendormanager_v1_folders_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVendorRequest.ProtoReflect.Descriptor instead.
func (*UpdateVendorRequest) Descriptor() ([]byte, []int) {
	return file_datum_os_vendormanager_v1_folders_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateVendorRequest) GetVendor() *Vendor {
	if x != nil {
		return x.Vendor
	}
	return nil
}

func (x *UpdateVendorRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type DeleteVendorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteVendorRequest) Reset() {
	*x = DeleteVendorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datum_os_vendormanager_v1_folders_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVendorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVendorRequest) ProtoMessage() {}

func (x *DeleteVendorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datum_os_vendormanager_v1_folders_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVendorRequest.ProtoReflect.Descriptor instead.
func (*DeleteVendorRequest) Descriptor() ([]byte, []int) {
	return file_datum_os_vendormanager_v1_folders_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteVendorRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_datum_os_vendormanager_v1_folders_service_proto protoreflect.FileDescriptor

var file_datum_os_vendormanager_v1_folders_service_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x6f, 0x73, 0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x19, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x2e, 0x6f, 0x73, 0x2e, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x6f, 0x73, 0x2f,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xef, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x34, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x1c, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x16, 0x12, 0x14, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x75, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x2f, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x2e, 0x6f,
	0x73, 0x2e, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x06,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x09, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x44, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1c, 0xe0, 0x41,
	0x02, 0xfa, 0x41, 0x16, 0x0a, 0x14, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x2e,
	0x6e, 0x65, 0x74, 0x2f, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xb9, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1c, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x16, 0x12,
	0x14, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x2f, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x22, 0x7a, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x2e, 0x6f, 0x73, 0x2e,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x07, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x97, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3e, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x2e, 0x6f, 0x73, 0x2e, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73,
	0x6b, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x73, 0x6b, 0x22, 0x47, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1c, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x16, 0x0a,
	0x14, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x2f, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0xa0, 0x05, 0x0a, 0x07,
	0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x12, 0x7e, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x2e, 0x2e, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x2e,
	0x6f, 0x73, 0x2e, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x2e,
	0x6f, 0x73, 0x2e, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x15, 0x3a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x22, 0x0b, 0x2f, 0x76, 0x31, 0x2f,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x12, 0x81, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x2b, 0x2e, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x2e, 0x6f, 0x73,
	0x2e, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x2e, 0x6f, 0x73, 0x2e, 0x76, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f,
	0x76, 0x31, 0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x3d, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x81, 0x01, 0x0a, 0x0b,
	0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x12, 0x2d, 0x2e, 0x64, 0x61,
	0x74, 0x75, 0x6d, 0x2e, 0x6f, 0x73, 0x2e, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x64, 0x61, 0x74,
	0x75, 0x6d, 0x2e, 0x6f, 0x73, 0x2e, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x12,
	0x8e, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x12, 0x2e, 0x2e, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x2e, 0x6f, 0x73, 0x2e, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x2e, 0x6f, 0x73, 0x2e, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x32, 0x23, 0x2f, 0x76, 0x31,
	0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x2f, 0x7b, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x2f, 0x2a, 0x7d,
	0x12, 0x7c, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x12, 0x2e, 0x2e, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x2e, 0x6f, 0x73, 0x2e, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e,
	0x2a, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x2f, 0x7b, 0x6e,
	0x61, 0x6d, 0x65, 0x3d, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x42, 0x32,
	0x5a, 0x30, 0x67, 0x6f, 0x2e, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6f, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f,
	0x73, 0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_datum_os_vendormanager_v1_folders_service_proto_rawDescOnce sync.Once
	file_datum_os_vendormanager_v1_folders_service_proto_rawDescData = file_datum_os_vendormanager_v1_folders_service_proto_rawDesc
)

func file_datum_os_vendormanager_v1_folders_service_proto_rawDescGZIP() []byte {
	file_datum_os_vendormanager_v1_folders_service_proto_rawDescOnce.Do(func() {
		file_datum_os_vendormanager_v1_folders_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_datum_os_vendormanager_v1_folders_service_proto_rawDescData)
	})
	return file_datum_os_vendormanager_v1_folders_service_proto_rawDescData
}

var file_datum_os_vendormanager_v1_folders_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_datum_os_vendormanager_v1_folders_service_proto_goTypes = []any{
	(*CreateVendorRequest)(nil),   // 0: datum.os.vendormanager.v1.CreateVendorRequest
	(*GetVendorRequest)(nil),      // 1: datum.os.vendormanager.v1.GetVendorRequest
	(*ListVendorsRequest)(nil),    // 2: datum.os.vendormanager.v1.ListVendorsRequest
	(*ListVendorsResponse)(nil),   // 3: datum.os.vendormanager.v1.ListVendorsResponse
	(*UpdateVendorRequest)(nil),   // 4: datum.os.vendormanager.v1.UpdateVendorRequest
	(*DeleteVendorRequest)(nil),   // 5: datum.os.vendormanager.v1.DeleteVendorRequest
	(*Vendor)(nil),                // 6: datum.os.vendormanager.v1.Vendor
	(*fieldmaskpb.FieldMask)(nil), // 7: google.protobuf.FieldMask
	(*emptypb.Empty)(nil),         // 8: google.protobuf.Empty
}
var file_datum_os_vendormanager_v1_folders_service_proto_depIdxs = []int32{
	6,  // 0: datum.os.vendormanager.v1.CreateVendorRequest.vendor:type_name -> datum.os.vendormanager.v1.Vendor
	7,  // 1: datum.os.vendormanager.v1.CreateVendorRequest.update_mask:type_name -> google.protobuf.FieldMask
	6,  // 2: datum.os.vendormanager.v1.ListVendorsResponse.vendors:type_name -> datum.os.vendormanager.v1.Vendor
	6,  // 3: datum.os.vendormanager.v1.UpdateVendorRequest.vendor:type_name -> datum.os.vendormanager.v1.Vendor
	7,  // 4: datum.os.vendormanager.v1.UpdateVendorRequest.update_mask:type_name -> google.protobuf.FieldMask
	0,  // 5: datum.os.vendormanager.v1.Vendors.CreateVendor:input_type -> datum.os.vendormanager.v1.CreateVendorRequest
	1,  // 6: datum.os.vendormanager.v1.Vendors.GetVendor:input_type -> datum.os.vendormanager.v1.GetVendorRequest
	2,  // 7: datum.os.vendormanager.v1.Vendors.ListVendors:input_type -> datum.os.vendormanager.v1.ListVendorsRequest
	4,  // 8: datum.os.vendormanager.v1.Vendors.UpdateVendor:input_type -> datum.os.vendormanager.v1.UpdateVendorRequest
	5,  // 9: datum.os.vendormanager.v1.Vendors.DeleteVendor:input_type -> datum.os.vendormanager.v1.DeleteVendorRequest
	6,  // 10: datum.os.vendormanager.v1.Vendors.CreateVendor:output_type -> datum.os.vendormanager.v1.Vendor
	6,  // 11: datum.os.vendormanager.v1.Vendors.GetVendor:output_type -> datum.os.vendormanager.v1.Vendor
	3,  // 12: datum.os.vendormanager.v1.Vendors.ListVendors:output_type -> datum.os.vendormanager.v1.ListVendorsResponse
	6,  // 13: datum.os.vendormanager.v1.Vendors.UpdateVendor:output_type -> datum.os.vendormanager.v1.Vendor
	8,  // 14: datum.os.vendormanager.v1.Vendors.DeleteVendor:output_type -> google.protobuf.Empty
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_datum_os_vendormanager_v1_folders_service_proto_init() }
func file_datum_os_vendormanager_v1_folders_service_proto_init() {
	if File_datum_os_vendormanager_v1_folders_service_proto != nil {
		return
	}
	file_datum_os_vendormanager_v1_vendors_resources_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_datum_os_vendormanager_v1_folders_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateVendorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datum_os_vendormanager_v1_folders_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetVendorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datum_os_vendormanager_v1_folders_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ListVendorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datum_os_vendormanager_v1_folders_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ListVendorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datum_os_vendormanager_v1_folders_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateVendorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datum_os_vendormanager_v1_folders_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteVendorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_datum_os_vendormanager_v1_folders_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_datum_os_vendormanager_v1_folders_service_proto_goTypes,
		DependencyIndexes: file_datum_os_vendormanager_v1_folders_service_proto_depIdxs,
		MessageInfos:      file_datum_os_vendormanager_v1_folders_service_proto_msgTypes,
	}.Build()
	File_datum_os_vendormanager_v1_folders_service_proto = out.File
	file_datum_os_vendormanager_v1_folders_service_proto_rawDesc = nil
	file_datum_os_vendormanager_v1_folders_service_proto_goTypes = nil
	file_datum_os_vendormanager_v1_folders_service_proto_depIdxs = nil
}
